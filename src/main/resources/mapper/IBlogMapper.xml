<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.fdzc.mapper.IBlogMapper">

    <resultMap id="blogQuery" type="edu.fdzc.queryvo.BlogQuery">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="updateTime" column="update_time"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="typeId" column="type_id"/>
        <association property="type" javaType="edu.fdzc.entity.Type">
            <id property="id" column="type_id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>

    <!--后台查询全部文章-->
    <select id="getAllBlogQuery" resultMap="blogQuery">
        select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join
        t_type t on b.type_id = t.id order by b.update_time desc
    </select>

    <!--添加文章-->
    <insert id="saveBlog" parameterType="edu.fdzc.entity.Blog">
        insert into t_blog (id,title, content, first_picture, flag,
        views, appreciation, share_statement, commentabled, published,
        recommend, create_time, update_time, type_id, user_id, description)
        values (#{id},#{title},#{content},#{firstPicture},#{flag},#{views},#{appreciation},
        #{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},
        #{updateTime},#{typeId},#{userId},#{description});
    </insert>

    <!--修改文章-->
    <update id="updateBlog" parameterType="edu.fdzc.queryvo.ShowBlog">
        update t_blog set published = #{published},flag = #{flag} ,
        title = #{title}, content = #{content}, type_id = #{typeId},
        first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
        share_statement = #{shareStatement}, appreciation = #{appreciation},
        commentabled = #{commentabled} ,update_time = #{updateTime} where id = #{id};
    </update>

    <!--删除文章-->
    <delete id="deleteBlog">
        delete from t_blog where id = #{id};
    </delete>

    <resultMap id="showBlog" type="edu.fdzc.queryvo.ShowBlog">
        <id property="id" column="id"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="typeId" column="type_id"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="description" column="description"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="commentabled" column="commentabled"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <!--查询指定id的博客-->
    <select id="getBlogById" resultMap="showBlog">
        select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from t_blog b  where  b.id = #{id}
    </select>

    <!--搜索博客文章-->
    <select id="searchByTitleOrTypeOrRecommend" parameterType="edu.fdzc.queryvo.SearchBlog" resultMap="blogQuery">
        <bind name="pattern" value="'%' + title + '%'"/>
        select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join
        t_type t on b.type_id = t.id
        <where>
            <if test="title!=null">
                and b.title like #{pattern}
            </if>
            <if test="typeId !=null">
                and b.type_id = #{typeId}
            </if>
        </where>
    </select>

    <resultMap id="firstPageBlog" type="edu.fdzc.queryvo.FirstPageBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>
        <result property="typeId" column="tid"/>
        <result property="typeName" column="name"/>

        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <!--首页文章-->
    <select id="getFirstPageBlog" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description,
        t.name ,
        u.nickname, u.avatar,t.id tid
        from t_blog b, t_type t,t_user u
        where b.type_id = t.id and  u.id = b.user_id order by b.update_time desc
    </select>

    <!--分类页面查询-->
    <select id="getByTypeId" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,
        t.name ,
        u.nickname, u.avatar
        from t_blog b, t_type t,t_user u
        where b.type_id = t.id and u.id = b.user_id and b.type_id = #{typeId} order by b.update_time desc
    </select>

    <!--搜索文章-->
    <select id="getSearchBlog" resultMap="firstPageBlog">
        <bind name="pattern" value="'%' + query + '%'"/>
        select b.id,b.title,b.first_picture, b.views,b.comment_count,b.update_time,b.description,t.name ,u.nickname,
        u.avatar
        from t_blog b, t_type t,t_user u
        where b.type_id = t.id and u.id = b.user_id and (b.title like #{pattern} or b.content like #{pattern})
        order by b.update_time desc
    </select>

    <resultMap id="recommendBlog" type="edu.fdzc.queryvo.RecommendBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="recommend" column="recommend"/>
    </resultMap>

    <!--推荐文章-->
    <select id="getAllRecommendBlog" resultMap="recommendBlog">
        select * from t_blog where recommend = true order by update_time desc LIMIT 5
    </select>


    <resultMap id="detailedBlog" type="edu.fdzc.queryvo.DetailedBlog">
        <id property="id" column="bid"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="typeName" column="name"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="updateTime" column="update_time"/>
        <result property="commentabled" column="commentabled"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <!--博客详情查询-->
    <select id="getDetailedBlog" resultMap="detailedBlog">
        select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name
        from t_blog b,t_user u, t_type t
        where b.user_id = u.id and b.type_id = t.id and b.id = #{id}
    </select>

    <!--文章访问自增-->
    <update id="updateViews">
        update t_blog b set b.views = b.views+1 where b.id = #{id}
    </update>

</mapper>